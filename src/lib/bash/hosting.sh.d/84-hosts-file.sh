#!/bin/bash

# lk_hosting_hosts_file_provision -q
#
# If -q is set, suppress the "Checking hosts file" message.
function lk_hosting_hosts_file_provision() {
    local LK_SUDO=1 FILE=/etc/hosts PUBLIC_IPS TEMP
    [[ ${1-} == -q ]] || lk_tty_print "Checking hosts file"
    lk_mktemp_with PUBLIC_IPS lk_system_list_public_network_ips &&
        lk_mktemp_with TEMP || return
    # Print /etc/hosts up to but not including the "Generated by" header
    {
        awk '
/^# ((Added|Generated) by |Virtual hosts$)/ { exit }
{ print; blank = 0 }
/^[[:blank:]]*$/ { blank = 1 }
END { if (NR && ! blank) { print "" } }' "$FILE" &&
            printf '# Generated by %s at %s\n' "${0##*/}" "$(lk_date_log)" &&
            printf '127.0.1.1 %s %s\n' "$LK_NODE_FQDN" "$LK_NODE_HOSTNAME" &&
            _lk_hosting_hosts_file_get_site_hosts "$PUBLIC_IPS"
    } >"$TEMP" &&
        lk_file_keep_original "$FILE" &&
        lk_file_replace -i "^(#|$S*\$)" "$FILE" <"$TEMP"
}

# _lk_hosting_hosts_file_get_site_hosts [PUBLIC_IPS_FILE]
function _lk_hosting_hosts_file_get_site_hosts() {
    local PUBLIC_IPS=${1-}
    [[ -n ${PUBLIC_IPS:+1} ]] ||
        lk_mktemp_with PUBLIC_IPS lk_system_list_public_network_ips || return
    awk '
BEGIN { ip[1] = "127.0.0.1" }
NF == 1 { ip[NR] = $0; next }
{ for (i in ip) { print ip[i], $0 } }' \
        "$PUBLIC_IPS" \
        <({ [[ ! -s $PUBLIC_IPS ]] || printf '%s\n' "$LK_NODE_FQDN"; } &&
            lk_hosting_list_sites -e | cut -f10 | tr ',' ' ')
}
