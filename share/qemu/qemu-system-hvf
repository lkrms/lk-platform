#!/usr/bin/env bash

function addArg() {
    while [ $# -gt 0 ]; do
        arg[${#arg[@]}]=$1
        shift
    done
}

function run() {
    set -- ${arg[@]+"${arg[@]}"} "$@"
    {
        printf '\n\n\nOutgoing:\n\n%q' "$cmd"
        [ $# -eq 0 ] || printf ' \\\n    %q' "$@"
    } >>/tmp/qemu-system-hvf.log
    exec "$cmd" "$@"
}

{
    printf '\n\n\n=== %s\n\nIncoming:\n\n%q' "$(/bin/date)" "$0"
    [ $# -eq 0 ] || printf ' \\\n    %q' "$@"
} >>/tmp/qemu-system-hvf.log

arm64=0
if [[ $MACHTYPE =~ ^(arm|aarch)64- ]]; then
    cmd=/opt/homebrew/bin/qemu-system-aarch64
    arm64=1
else
    cmd=/usr/local/bin/qemu-system-x86_64
fi
if [ ! -x "$cmd" ]; then
    cmd=${cmd##*/}
fi

arg=()
accel=0
cpu=0

# Don't change anything if this is a libvirt probe
(IFS=, && [[ ,$*, != *,-machine,none,* ]]) ||
    run "$@"

while [ $# -gt 0 ]; do
    case "$1" in
    -machine)
        machine=$2
        [[ $machine == *,highmem=* ]] ||
            machine+=",highmem=off"
        # Prevent "madvise doesn't support MADV_DONTDUMP, but
        # dump_guest_core=off specified" errors
        machine=${machine/",dump-guest-core=off"/}
        if [[ $machine =~ (.*),accel=[^[:blank:],]*(.*) ]]; then
            if ((accel)); then
                addArg -machine "${BASH_REMATCH[1]}${BASH_REMATCH[2]}"
            else
                addArg -machine "${BASH_REMATCH[1]},accel=hvf${BASH_REMATCH[2]}"
            fi
            accel=1
        else
            addArg -machine "$machine"
        fi
        shift
        ;;
    -accel)
        ((accel)) ||
            addArg -accel hvf
        accel=1
        shift
        ;;
    -cpu)
        ((cpu)) ||
            addArg -cpu host
        cpu=1
        shift
        ;;
    *)
        addArg "$1"
        ;;
    esac
    shift
done

run
